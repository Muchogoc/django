version: 2 

jobs:
  test:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.6.8
        environment:
          SECRET_KEY: $SECRET_KEY
          SQL_ENGINE: $SQL_ENGINE
          SQL_DATABASE: $SQL_DATABASE
          SQL_USER: $SQL_USER
          SQL_PASSWORD: $SQL_PASSWORD
          SQL_HOST: $SQL_HOST
          SQL_PORT: $SQL_PORT
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_DB: $POSTGRES_DB
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "requirements/local.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
      - save_cache: # cache Python dependencies
          key: deps9-{{ .Branch }}-{{ checksum "requirements/local.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flake8 .
            flake8 --bug-report
            cd portfolio
            coverage run manage.py test
            coverage html
            coverage report --fail-under=100
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov
  
  publish:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - checkout
      -  run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
      - run:
          name: Create .pypirc
          command: |
            echo -e "[disutils]" >> ~/.pypirc
            echo -e "index-servers = pypi" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc      
      - run:
          name: create packages
          command: |
            python3 setup.py sdist bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
  
  deploy:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - add_ssh_keys:
          fingerprints:
            - "$kEY"
      - checkout
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install ansible
      - run:
          name: Create hosts and run playbook
          command: |
            . venv/bin/activate
            cd ansible
            echo -e "[web]" >> hosts
            echo -e "mashdem.ml ansible_user=ubuntu" >> hosts
            echo -e "[web:vars]" >> hosts
            echo -e "ansible_python_interpreter=/usr/bin/python3" >> hosts
            ansible-playbook -i hosts deploy.yml

workflows:
  version: 2
  test-and-approval-publish-and-approval-deploy:
    jobs:
      # - test
      # - hold:
      #     type: approval
      #     requires:
      #       - test
      # - publish:
      #     requires:
      #       - hold
      #     filters:
      #       branches:
      #         only: master
      - deploy
          # requires:
          #   - hold
          # filters:
          #   branches:
          #     only: master
